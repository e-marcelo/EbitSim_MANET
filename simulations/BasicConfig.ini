###
### Include Parent Config
###
include omnetpp.ini

###
### Basic configuration for scenarios using the ClientController
###
[Config Base]
network = BasicTopology
seed-set = ${repetition}

## Ethernet
#**.mac[*].txQueueLimit = 100000

#Area de simulación
#EAM :: *.playgroundSizeX = 1000
#EAM :: *.playgroundSizeY = 1000

#*.numHosts = 40
*.nodeSeparation = 150
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 1000m
**.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

**.debug = true
**.coreDebug = false
**.host*.**.channelNumber = 0

## TCP
**.tcp.mss = 536 # bigger size?
**.tcp.tcpAlgorithmClass = "TCPReno"
#**.tcp.tcpAlgorithmClass = "TCPTahoe"
#**.tcp.tcpAlgorithmClass = "TCPNewReno"
#**.tcp.tcpAlgorithmClass = "TCPNoCongestionControl"
#**.tcp.tcpAlgorithmClass = "DumbTCP"
#**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
#**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"
**.tcp.recordStats = false
#**.tcp.nagleEnabled = false

## The type of the bitTorrentApplication
*.peer[*].typename = "Peer"

## Network configuration
*.clientController.startTime =  10s
*.clientController.trackerAddress = "tracker"
*.clientController.trackerPort = 8082

**.mac.txrate = 1000Mbps # bandwidth
**.wlan.mac.rng-0 = 2
# channel physical parameters
*.channelcontrol.carrierFrequency = 2.4GHz
*.channelcontrol.pMax = 2.0mW
*.channelcontrol.sat = -110dBm
*.channelcontrol.alpha = 2
*.channelcontrol.numChannels = 1

# nic settings
**.wlan.mgmtType = "Ieee80211MgmtAdhoc"
**.wlan.mgmt.frameCapacity = 10
**.wlan.mac.address = "auto"
**.wlan.mac.maxQueueSize = 14
**.wlan.mac.rtsThresholdBytes = 3000B
**.wlan.mac.bitrate = 2Mbps
**.wlan.mac.retryLimit = 7
**.wlan.mac.cwMinData = 7
**.wlan.mac.cwMinBroadcast = 31



**.wlan.radio.bitrate = 2Mbps
**.wlan.radio.transmitterPower = 2mW
**.wlan.radio.thermalNoise = -110dBm
**.wlan*.radio.sensitivity=-90dBm
**.wlan.radio.pathLossAlpha = 2
**.wlan.radio.snirThreshold = 4dB
**.wlan.radio.ReceiverAntennaHigh = 250m
**.wlan.radio.TransmiterAntennaHigh = 250m

## Parameters
#**.swarmManager.normalRefreshInterval = 100s
**.swarmManager.numWant = 20
**.tracker.tcpApp[0].maxListSize = 50
**.tracker.tcpApp[0].contents = xmldoc("../simulations/BTContents.xml", "contentList")
**.tracker.tcpApp[0].typename="TrackerApp"
#**.tracker.tcpApp[0].dataTransferMode = "object"
**.tracker.tcpApp[0].dataTransferMode = "object"
**.tracker.mobilityType = "StationaryMobility"
#Posicion del tracker @display("p=450,450");
**.tracker.mobility.initialX = 460m
**.tracker.mobility.initialY = 460m


# processing time configured with the histogram with 55 bins
*.peer[*].bitTorrentApp.bitTorrentClient.processingTimeHistogram = "../simulations/hist_55bin.dat"
*.peer[*].bitTorrentApp.bitTorrentClient.dataTransferMode = "object"

#Configuración de mobilidad y posición de nodos
*.peer[*].mobilityType = "StationaryMobility"
#Posicion del tracker @display("p=450,450");
*.peer[0].mobility.initialX = 410m
*.peer[0].mobility.initialY = 430m

*.peer[1].mobility.initialX = 440m
*.peer[1].mobility.initialY = 430m

*.peer[2].mobility.initialX = 470m
*.peer[2].mobility.initialY = 430m

*.peer[3].mobility.initialX = 510m
*.peer[3].mobility.initialY = 430m
# Thruput calculated whenever 50 packets are transfered or every 100ms
#**.peer[*].eth.thruputMeterDL.batchSize = 50
#**.peer[*].eth.thruputMeterUL.batchSize = 50
#**.peer[*].eth.thruputMeterUL.maxInterval = 100ms
#**.peer[*].eth.thruputMeterDL.maxInterval = 100ms

## Statistics
# The eth and arp modules also save statistics
#**.eth.**.vector-recording = false
#**.eth.**.scalar-recording = false
#**.eth[*].**.vector-recording = false
#**.eth[*].**.scalar-recording = false
#**.arp.**.vector-recording = false
#**.arp.**.scalar-recording = false
# enable recordings by module
*.*.scalar-recording = true
*.*.vector-recording = true
**.bitTorrentClient.*.scalar-recording = true
#**.contentManager**.vector-recording = true

# disable all recordings that are not explicitly defined
**.scalar-recording = false
**.vector-recording = false

###
### Testing how the number of active and passive connections affect
### the simulation
###
#[Config Connections]
#extends = Base
#description = "Test the number of active and passive connections"
#experiment-label = "Active vs Passive Connections"
#measurement-label = ""
#replication-label = "${repetition}"
#repeat = 1

#**.swarmManager.remainingSeeders = 0.3
#**.bitTorrentClient.numberOfActivePeers = ${active=3,5,25,50}
#**.bitTorrentClient.numberOfPassivePeers = ${passive=2,5,25,50}
#constraint = ($active == 3 && $passive==2) ||\
#             ($active == $passive)

#*.clientController.profile =\
#    xmldoc("../simulations/BTProfiles.xml",\
#            "profileList/profile[@name='small']")
#**.contentManager_*.bytesSec = 35KiB
#**.contentManager_*.burstSize = 50
#*.numPeers = 500
#*.clientController.numSeeders = 1

#**.bitTorrentClient.debugFlag = true
#**.bitTorrentClient.subModulesDebugFlag = true
#**.clientController.debugFlag = true
#**.swarmManager.debugFlag = true

###
### Validation using only the small file size
###
#[Config ValidationSmall]
#extends = Base
#description = "Validate the simulation comparing with Szydlowski 2011."
#experiment-label = "Validation Study small file"
#measurement-label = "Upload rate 35, File small, Seeder percentage 0.3"
#replication-label = "${repetition}"
#repeat = 1

#**.swarmManager.remainingSeeders = 0.3
#**.bitTorrentClient.numberOfActivePeers = 5
#**.bitTorrentClient.numberOfPassivePeers = 5

#*.clientController.profile =\
#    xmldoc("../simulations/BTProfiles.xml",\
#            "profileList/profile[@name='small']")
#**.contentManager_*.bytesSec = 35KiB
#**.contentManager_*.burstSize = 50
#*.numPeers = 500
#*.clientController.numSeeders = 1

###
### Validation changing the file size, the upload rate and the number of connections
###
#[Config Validation]
#extends = Base
#description = "Validate the simulation comparing with Szydlowski 2011."
#experiment-label = "Validation Study"
#measurement-label = "Upload rate ${rate}, File ${file}, Connections A(${active})-P(${passive})"
#replication-label = "${repetition}"
#repeat = 3
#
## 30% of the peers will remain after completion
#**.swarmManager.remainingSeeders = 0.3
#
#*.clientController.profile =\
#    xmldoc("../simulations/BTProfiles.xml",\
#            "profileList/profile[@name='${file=small,medium,large}']")
#**.contentManager_*.bytesSec = ${rate=35KiB, 92KiB,512KiB}
#**.contentManager_*.burstSize = 50
#
#**.bitTorrentClient.numberOfActivePeers = ${active=3,5}
#**.bitTorrentClient.numberOfPassivePeers = ${passive=2,5}
#
#*.numPeers = 500
#constraint = (("$file" == "small" && "$rate" == "35KiB") ||\
#             ("$file" == "medium" && "$rate" == "92KiB") ||\
#             ("$file" == "large" && "$rate" == "512KiB")) &&\
#             (($active == 3 && $passive == 2) || ($active == $passive))
#*.clientController.numSeeders = 1
#
####
#### Experiment for testing the simulation. The file size is small so that
#### the simulation ends quickly
####
[Config Test]
#sim-time-limit= 300s #5 minutos || 540s #9 minutos
sim-time-limit=24h
extends = Base
description = "Test the simulation with a small file for fast completion."
experiment-label = "Simulation Test"
measurement-label = "Peers: $peers, Rate: $rate"
#Numero de pares
*.numPeers = 4
# 10MB content
*.clientController.profile = xmldoc("../simulations/BTProfiles.xml","profileList/profile[@name='test_simple']")
*.clientController.numSeeders = 1
*.numPeers = ${peers=5,50,500}
num-rngs = 4
**.peer[*].bitTorrentApp.swarmManager.contentManager*.rng-0 = 0
**.peer[*].bitTorrentApp.swarmManager.choker*.rng-0 = 1
**.tracker.**.rng-0 = 2
**.contentManager*.bytesSec = ${rate=10KiB, 100KiB, 1MiB}
**.contentManager_*.burstSize = 50
# 70% or 30% of the peers will remain after completion
**.bitTorrentClient.numberOfActivePeers = ${active=3,5,25,50}
**.bitTorrentClient.numberOfPassivePeers = ${passive=2,5,25,50}
**.swarmManager.remainingSeeders = 0.3

constraint = (($active == $passive) || ($active == 3 && $passive == 2))

# disable all recordings that are not explicitly defined
#**.scalar-recording = false
#**.vector-recording = false

## Debug flags for printing messages to std::err
# WARNING: Enabling these messages may have a high impact on performance, and
# the processing of the log messages may take time and resources
**.bitTorrentClient.debugFlag = true
**.bitTorrentClient.subModulesDebugFlag = true
**.clientController.debugFlag = true
**.swarmManager.debugFlag = true
**.trackerApp.debugFlag = true
