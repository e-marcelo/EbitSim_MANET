##
### Include Parent Config
###
include omnetpp.ini

###
### Basic configuration for scenarios using the ClientController
###
[Config Base]
network = BasicTopology
seed-set = ${repetition}


#Medidas de desempeño -> Periodo de calentamiento (SLAW)
warmup-period = 10s 


#Verificar que no se requiera mucho espacio en el disco duro para almacenamiento de datos
record-eventlog = false

#Verificar que no se requiera mucho espacio en el disco duro para almacenamiento de datos -> :(
#record-eventlog =true


#Área de simulación
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 460m
**.constraintAreaMaxY = 220m
**.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false
**.debug = false
**.coreDebug = false


## TCP
**.tcp.mss = 536 # bigger size?
**.tcp.tcpAlgorithmClass = "TCPReno"
#**.tcp.tcpAlgorithmClass = "TCPTahoe"
#**.tcp.tcpAlgorithmClass = "TCPNewReno"
#**.tcp.tcpAlgorithmClass = "TCPNoCongestionControl"
#**.tcp.tcpAlgorithmClass = "DumbTCP"
#**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
#**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"
#**.tcp.recordStats = false
#**.tcp.advertisedWindow = 14336
#**.tcp.nagleEnabled = false
## The type of the bitTorrentApplication
#*.peer[*].tcp.typename = "BitTorrentClient"

## tcp settings
#**.tcp.mss = 1024
#**.tcp.advertisedWindow = 14336  # 14*mss
##**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
##**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"
#**.tcp.tcpAlgorithmClass = "TCPReno"
#**.tcp.recordStats = true

## ip settings
#**.ip.procDelay = 10us
## **.IPForward=false
#
## ARP configuration
#**.arp.cacheTimeout = 100s



## Network configuration
*.clientController.startTime = 10s
*.clientController.trackerAddress = "tracker"
*.clientController.trackerPort = 8082

#**.mac.txrate = 1000Mbps # bandwidth
#**.wlan.mac.rng-0 = 2
## channel physical parameters
*.channelControl.carrierFrequency = 2.4GHz
*.channelControl.pMax = 2mW
*.channelControl.sat = -110dBm
*.channelControl.alpha = 2
*.channelControl.propagationModel = "TwoRayGroundModel"#"FreeSpaceModel"
#*.channelcontrol.numChannels = 1

# nic settings
#*.peer[*].wlan*.mgmtType = "Ieee80211MgmtAdhoc"
#*.peer[*].wlan*.mgmt.frameCapacity = 10
#*.peer[*].wlan*.mac.address = "auto"
#*.peer[*].wlan*.mac.maxQueueSize = 15
#*.peer[*].wlan*.mac.rtsThresholdBytes = 3000B
#EAM ::: *.peer[*].wlan*.mac.bitrate = 54Mbps
#*.peer[*].wlan*.mac.basicBitrate = 54Mbps 
#*.peer[*].wlan*.mac.retryLimit = 7
#*.peer[*].wlan*.mac.cwMinData = 7
#EAM ::: *.peer[*].wlan*.mac.cwMinBroadcast = 31
#*.peer[*].wlan*.mac.cwMinMulticast = 31




*.peer[*].wlan*.radio.transmitterPower = 2mW
#*.peer[*].wlan.radio.thermalNoise = -110dBm
*.peer[*].wlan*.radio.sensitivity=-71dBm
#*.peer[*].wlan.radio.pathLossAlpha = 2
#*.peer[*].wlan.radio.snirThreshold = 4dB

#*.peer[0].wlan[0].radio.channelNumber = 0
#*.peer[0].wlan[1].radio.channelNumber = 1
#
#*.peer[1].wlan[0].radio.channelNumber = 0
#*.peer[1].wlan[1].radio.channelNumber = 1
#
#*.peer[2].wlan[0].radio.channelNumber = 0
#*.peer[2].wlan[1].radio.channelNumber = 2
#
#*.peer[3].wlan[0].radio.channelNumber = 1
#*.peer[3].wlan[1].radio.channelNumber = 2

# ARP configuration
#**.networkLayer.
#*.peer[*].networkLayer.proxyARP = true  # Host's is hardwired "false"
#**.arp.cacheTimeout = 100s
#*.peer[*].networkLayer.arp.cacheTimeout = 100s
#Revisar -> **.wlan.radio.ReceiverAntennaHigh = 50m
#Revisar -> **.wlan.radio.TransmiterAntennaHigh = 50m


*.tracker.wlan[*].radio.transmitterPower = 0mW
#*.tracker.wlan[*].radio.thermalNoise = -110dBm
*.tracker.wlan[*].radio.sensitivity= 0dBm
#*.tracker.wlan[*].radio.pathLossAlpha = 2
#*.tracker.wlan[*].radio.snirThreshold = 4dB

#*.tracker.wlan[0].radio.channelNumber = 0
#*.tracker.wlan[1].radio.channelNumber = 1

#WLAN
#**.wlan*.bitrate = 1Mbps #EAM :: 54Mbps

#MAC
#**.mac.maxQueueSize = 15

**.drawCoverage = true

*.mobilityModel = "StationaryMobility"##"StationaryMobility, SlawMobility, StaticGridMobility"
**.mapName = "./maps/2000_1000x1000/2000_1000x1000_0.75_10"

#**.mapName = "/home/emarcelo/Documents/omnetpp-4.2.2/samples/EbitSim_MANET/simulations/maps/2000_1000x1000/2000_1000x1000_0.75_10"
#Prueba :: **.mapName = "/home/eandres/Downloads/omnetpp-4.2.2/inet/examples/mobility/maps/2000_1000x1000/2000_1000x1000_0.75_10"


## Parameters
**.swarmManager.normalRefreshInterval = 100s

**.swarmManager.numWant = 2 #<- Cantidad de pares que solicita el par (posible error con el timeout)
**.tracker.tcpApp[0].maxListSize = 50
**.tracker.tcpApp[0].contents = xmldoc("../simulations/BTContents.xml", "contentList")
**.tracker.tcpApp[0].typename="TrackerApp"
#**.tracker.tcpApp[0].dataTransferMode = "object"
**.tracker.tcpApp[0].dataTransferMode = "object"
**.tracker.mobilityType = "StationaryMobility"  #[++]"SlawMobility, StationaryMobility"
#Posicion del tracker @display("p=450,450");
**.tracker.mobility.initialX = 0m
**.tracker.mobility.initialY = 0m
#-
#-
#-
#-#
#-#*.peer[*].mobility.waitTime = uniform(3s,8s)
#-#*.peer[*].mobility.speed = uniform(20mps,50mps)
#-# 
#-#Posicion del tracker @display("p=450,450");
#-#[++]*.peer[*].mobility.constraintAreaMaxX = 0m
#-#[++]*.peer[*].mobility.constraintAreaMaxY = 500m
#-
#*.peer[0].mobility.initialX = 40m
#*.peer[0].mobility.initialY = 40m
#####
#*.peer[1].mobility.initialX = 50m
#*.peer[1].mobility.initialY = 50m
#####
#*.peer[2].mobility.initialX = 60m
#*.peer[2].mobility.initialY = 60m
#####
#*.peer[3].mobility.initialX = 70m
#*.peer[3].mobility.initialY = 70m
**.peer[*].tcpType = "peer"
# processing time configured with the histogram with 55 bins
*.peer[*].bitTorrentApp.bitTorrentClient.processingTimeHistogram = "../simulations/hist_55bin.dat"
*.peer[*].bitTorrentApp.bitTorrentClient.dataTransferMode = "object"
#Adaptación del contenido (*.torrent)
*.peer[*].bitTorrentApp.bitTorrentClient.contents = xmldoc("../simulations/BTContents.xml", "contentList")
*.peer[*].bitTorrentApp.bitTorrentClient.numberOfPeers = 40
*.peer[*].bitTorrentApp.bitTorrentClient.numWant = 50 #<- Cantidad de pares en la lista de pares aleatorios
#Configuración de mobilidad y posición de nodos
*.peer[*].mobilityType =  "StationaryMobility" #[**] "ConstSpeedMobility" "StationaryMobility, SlawMobility, StationaryMobility, RandomWPMobility, SlawMobility, StationaryMobility"
#verificar configuración con modelo de movilidad: SLAW
#*.peer[*].slaw.mapName = "/home/emarcelo/Documents/omnetpp-4.2.2/samples/EbitSim_MANET/simulations/maps/2000_1000x1000/2000_1000x1000_0.75_10"
	
*.peer[0].mobility.initialX = 40m
*.peer[0].mobility.initialY = 40m

*.peer[1].mobility.initialX = 80m
*.peer[1].mobility.initialY = 40m

*.peer[2].mobility.initialX = 120m
*.peer[2].mobility.initialY = 40m

*.peer[3].mobility.initialX = 160m
*.peer[3].mobility.initialY = 40m

*.peer[4].mobility.initialX = 200m
*.peer[4].mobility.initialY = 40m

*.peer[5].mobility.initialX = 240m
*.peer[5].mobility.initialY = 40m

*.peer[6].mobility.initialX = 280m
*.peer[6].mobility.initialY = 40m

*.peer[7].mobility.initialX = 320m
*.peer[7].mobility.initialY = 40m

*.peer[8].mobility.initialX = 360m
*.peer[8].mobility.initialY = 40m

*.peer[9].mobility.initialX = 400m
*.peer[9].mobility.initialY = 40m

*.peer[10].mobility.initialX = 40m
*.peer[10].mobility.initialY = 80m

*.peer[11].mobility.initialX = 80m
*.peer[11].mobility.initialY = 80m

*.peer[12].mobility.initialX = 120m
*.peer[12].mobility.initialY = 80m

*.peer[13].mobility.initialX = 160m
*.peer[13].mobility.initialY = 80m

*.peer[14].mobility.initialX = 200m
*.peer[14].mobility.initialY = 80m

*.peer[15].mobility.initialX = 240m
*.peer[15].mobility.initialY = 80m

*.peer[16].mobility.initialX = 280m
*.peer[16].mobility.initialY = 80m

*.peer[17].mobility.initialX = 320m
*.peer[17].mobility.initialY = 80m

*.peer[18].mobility.initialX = 360m
*.peer[18].mobility.initialY = 80m

*.peer[19].mobility.initialX = 400m
*.peer[19].mobility.initialY = 80m

*.peer[20].mobility.initialX = 40m
*.peer[20].mobility.initialY = 120m

*.peer[21].mobility.initialX = 80m
*.peer[21].mobility.initialY = 120m

*.peer[22].mobility.initialX = 120m
*.peer[22].mobility.initialY = 120m

*.peer[23].mobility.initialX = 160m
*.peer[23].mobility.initialY = 120m

*.peer[24].mobility.initialX = 200m
*.peer[24].mobility.initialY = 120m

*.peer[25].mobility.initialX = 240m
*.peer[25].mobility.initialY = 120m

*.peer[26].mobility.initialX = 280m
*.peer[26].mobility.initialY = 120m

*.peer[27].mobility.initialX = 320m
*.peer[27].mobility.initialY = 120m

*.peer[28].mobility.initialX = 360m
*.peer[28].mobility.initialY = 120m

*.peer[29].mobility.initialX = 400m
*.peer[29].mobility.initialY = 120m

*.peer[30].mobility.initialX = 40m
*.peer[30].mobility.initialY = 160m
#
*.peer[31].mobility.initialX = 80m
*.peer[31].mobility.initialY = 160m
#
*.peer[32].mobility.initialX = 120m
*.peer[32].mobility.initialY = 160m
#
*.peer[33].mobility.initialX = 160m
*.peer[33].mobility.initialY = 160m
#
*.peer[34].mobility.initialX = 200m
*.peer[34].mobility.initialY = 160m
#
*.peer[35].mobility.initialX = 240m
*.peer[35].mobility.initialY = 160m
#
*.peer[36].mobility.initialX = 280m
*.peer[36].mobility.initialY = 160m
#
*.peer[37].mobility.initialX = 320m
*.peer[37].mobility.initialY = 160m
#
*.peer[38].mobility.initialX = 360m
*.peer[38].mobility.initialY = 160m
#
*.peer[39].mobility.initialX = 400m
*.peer[39].mobility.initialY = 160m
#*.peer[*].mobility.speed = 1mps

#*.peer[*].mobility.numHosts = 16
#*.peer[*].mobility.marginX = 10m
#*.peer[*].mobility.marginY = 10m



#*.tracker.routingProtocol = "OLSR_ETX" #"AODVUU"
#*.peer[*].routingProtocol = "OLSR_ETX" #"AODVUU"
#Protocolo de encaminamiento

# nic settings
#**.wlan[*].bitrate = 54Mbps
#**.wlan[*].opMode = "g"
#**.wlan[*].mac.address = "auto"
#**.wlan[*].mac.maxQueueSize = 14
#**.wlan[*].mac.rtsThresholdBytes = 3000B
#**.wlan[*].mac.basicBitrate = 6Mbps  # 24Mbps
#**.wlan[*].mac.retryLimit = 3 #************************************************num of retrasmission before link break!!!!!
#**.wlan[*].mac.cwMinData = 31
#**.wlan[*].mac.cwMinBroadcast = 31
#**.wlan[*].mac.slotTime = 9us #
#**.wlan[*].mac.AIFSN = 2 #DIFS
#**.wlan[*].radio.transmitterPower=2.0mW
#**.wlan[*].radio.pathLossAlpha=2 ##################################################################
#**.wlan[*].radio.snirThreshold = 4dB  # in dB
#**.wlan[*].radio.thermalNoise=-110dBm
#**.wlan[*].radio.sensitivity=-90dBm
#**.wlan[*].radio.channelModel = "RAYLEIGH" #1/2  rayleigh/awgn
#**.wlan[*].radio.berTableFile="per_table_80211g_Trivellato.dat"



**.routingProtocol= "DSRUU"#"DYMOUM"#"AODVUU" "OLSR_ETX" "DSRUU" "DYMO" "DSDV_2"

#**.manetrouting.log_to_file = false
#**.manetrouting.hello_jittering = true
#**.manetrouting.optimized_hellos = true
#**.manetrouting.expanding_ring_search = false
#**.manetrouting.local_repair = true
#**.manetrouting.rreq_gratuitous = false
##**.debug = false
#**.manetrouting.rt_log_interval = 0
#**.manetrouting.unidir_hack = 0
#**.manetrouting.internet_gw_mode = 0
#**.manetrouting.receive_n_hellos = 1
#**.manetrouting.ratelimit = 1
#**.manetrouting.llfeedback = false# //1000
#**.manetrouting.wait_on_reboot = 0
#**.manetrouting.active_timeout = 6000 # // time in ms
#**.manetrouting.internet_gw_address = "0.0.0.0"


#-## Thruput calculated whenever 50 packets are transfered or every 100ms
#-#**.peer[*].eth.thruputMeterDL.batchSize = 50
#-#**.peer[*].eth.thruputMeterUL.batchSize = 50
#-#**.peer[*].eth.thruputMeterUL.maxInterval = 100ms
#-#**.peer[*].eth.thruputMeterDL.maxInterval = 100ms
#-
#-## Statistics
#-# The eth and arp modules also save statistics
#-#**.eth.**.vector-recording = false
#-#**.eth.**.scalar-recording = false
#-#**.eth[*].**.vector-recording = false
#-#**.eth[*].**.scalar-recording = false
#-#**.arp.**.vector-recording = false
#-#**.arp.**.scalar-recording = false
#-# enable recordings by module
#-*.*.scalar-recording = true
#-*.*.vector-recording = true
#-**.bitTorrentClient.*.scalar-recording = true
#-#**.contentManager**.vector-recording = true
#-
#-# disable all recordings that are not explicitly defined
**.scalar-recording = false
**.vector-recording = false
#-
#-###
#-### Testing how the number of active and passive connections affect
#-### the simulation
#-###
#-#[Config Connections]
#-#extends = Base
#-#description = "Test the number of active and passive connections"
#-#experiment-label = "Active vs Passive Connections"
#-#measurement-label = ""
#-#replication-label = "${repetition}"
#-#repeat = 1
#-
#-#**.swarmManager.remainingSeeders = 0.3
#-#**.bitTorrentClient.numberOfActivePeers = ${active=3,5,25,50}
#-#**.bitTorrentClient.numberOfPassivePeers = ${passive=2,5,25,50}
#-#constraint = ($active == 3 && $passive==2) ||\
#-#             ($active == $passive)
#-
#-#*.clientController.profile =\
#-#    xmldoc("../simulations/BTProfiles.xml",\
#-#            "profileList/profile[@name='small']")
#-#**.contentManager_*.bytesSec = 35KiB
#-#**.contentManager_*.burstSize = 50
#-#*.numPeers = 500
#-#*.clientController.numSeeders = 1
#-
#-#**.bitTorrentClient.debugFlag = true
#-#**.bitTorrentClient.subModulesDebugFlag = true
#-#**.clientController.debugFlag = true
#-#**.swarmManager.debugFlag = true
#-
#-###
#-### Validation using only the small file size
#-###
#-#[Config ValidationSmall]
#-#extends = Base
#-#description = "Validate the simulation comparing with Szydlowski 2011."
#-#experiment-label = "Validation Study small file"
#-#measurement-label = "Upload rate 35, File small, Seeder percentage 0.3"
#-#replication-label = "${repetition}"
#-#repeat = 1
#-
#-#**.swarmManager.remainingSeeders = 0.3
#-#**.bitTorrentClient.numberOfActivePeers = 5
#-#**.bitTorrentClient.numberOfPassivePeers = 5
#-
#-#*.clientController.profile =\
#-#    xmldoc("../simulations/BTProfiles.xml",\
#-#            "profileList/profile[@name='small']")
#-#**.contentManager_*.bytesSec = 35KiB
#-#**.contentManager_*.burstSize = 50
#-#*.numPeers = 500
#-#*.clientController.numSeeders = 1
#-
#-###
#-### Validation changing the file size, the upload rate and the number of connections
#-###
#-#[Config Validation]
#-#extends = Base
#-#description = "Validate the simulation comparing with Szydlowski 2011."
#-#experiment-label = "Validation Study"
#-#measurement-label = "Upload rate ${rate}, File ${file}, Connections A(${active})-P(${passive})"
#-#replication-label = "${repetition}"
#-#repeat = 3
#-#
#-## 30% of the peers will remain after completion
#-#**.swarmManager.remainingSeeders = 0.3
#-#
#-#*.clientController.profile =\
#-#    xmldoc("../simulations/BTProfiles.xml",\
#-#            "profileList/profile[@name='${file=small,medium,large}']")
#-#**.contentManager_*.bytesSec = ${rate=35KiB, 92KiB,512KiB}
#-#**.contentManager_*.burstSize = 50
#-#
#-#**.bitTorrentClient.numberOfActivePeers = ${active=3,5}
#-#**.bitTorrentClient.numberOfPassivePeers = ${passive=2,5}
#-#
#-#*.numPeers = 500
#-#constraint = (("$file" == "small" && "$rate" == "35KiB") ||\
#-#             ("$file" == "medium" && "$rate" == "92KiB") ||\
#-#             ("$file" == "large" && "$rate" == "512KiB")) &&\
#-#             (($active == 3 && $passive == 2) || ($active == $passive))
##*.clientController.numSeeders = 1
#
####
#### Experiment for testing the simulation. The file size is small so that
#### the simulation ends quickly
####
[Config Test]
#sim-time-limit= 300s #5 minutos || 540s #9 minutos || 1h || 1day

sim-time-limit= 3day #-> 1.5h#2000s#BitHoc -> 2h



extends = Base
description = "Test the simulation with a small file for fast completion."
experiment-label = "Simulation Test"
measurement-label = "Peers: $peers, Rate: $rate"

#Numero de pares
*.numPeers = 40

# 10MB content
*.clientController.profile = xmldoc("../simulations/BTProfiles.xml","profileList/profile[@name='test_simple']")
*.clientController.numSeeders = 10
#EAM :: *.numPeers = ${peers=5,50,500}
num-rngs = 2
**.peer[*].bitTorrentApp.swarmManager.contentManager*.rng-0 = 0
**.peer[*].bitTorrentApp.swarmManager.choker*.rng-0 = 1
#**.tracker.**.rng-0 = 2
**.contentManager*.bytesSec = 1MiB#${rate=10KiB, 100KiB, 1MiB}
**.contentManager_*.burstSize = 50
# 70% or 30% of the peers will remain after completion
**.bitTorrentClient.numberOfActivePeers = 4#${active=3,5,25,50}
**.bitTorrentClient.numberOfPassivePeers = 5#${passive=2,5,25,50}
**.swarmManager.remainingSeeders = 0.3

#Restricción
#constraint = (($active == $passive) || ($active == 3 && $passive == 2))
**.scalar-recording = false
**.vector-recording = false

# disable all recordings that are not explicitly defined
#**.bitTorrentClient.*.scalar-recording = true
#**.contentManager**.vector-recording = true
#**.contentManager**.vector-recording = true

#**.swarmManager**.ContentManager_DownloadMarkPeerId.result-recording-modes = true
#**.swarmManager**.ContentManager_25_percentDownloadMarkTime.result-recording-modes = true
#**.swarmManager**.ContentManager_100_percentDownloadMarkTime.result-recording-modes = true


#**.contentManager**.vector-recording = true

#No funciona!
#**.swarmManager**.ContentManager_DownloadMarkPeerId.result-recording-modes = true
#**.swarmManager**.ContentManager_25_percentDownloadMarkTime.result-recording-modes = true
#**.swarmManager**.ContentManager_100_percentDownloadMarkTime.result-recording-modes = true

**.scalar-recording = false
**.vector-recording = false
#
#**.bitTorrentClient.*.scalar-recording = true
#**.contentManager**.scalar-recording = true


## Debug flags for printing messages to std::err
# WARNING: Enabling these messages may have a high impact on performance, and
# the processing of the log messages may take time and resources
**.bitTorrentClient.debugFlag = false
**.bitTorrentClient.subModulesDebugFlag = false
**.clientController.debugFlag = false
**.swarmManager.debugFlag = false
**.trackerApp.debugFlag = false

